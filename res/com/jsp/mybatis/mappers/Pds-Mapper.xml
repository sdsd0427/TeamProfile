<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Pds-Mapper">
	<sql id="search">
		<if test="searchType == 't'.toString()">
			and title like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'w'.toString()">
			and writer like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'c'.toString()">
			and content like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'tc'.toString()">
			and (
			title like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
		<if test="searchType == 'cw'.toString()">
			and (
			writer like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
		<if test="searchType == 'tcw'.toString()">
			and (
			title like '%'||#{keyword}||'%'
			or
			writer like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
	</sql>
	
	<select id="selectSearchPdsList" resultType="pds">
		select
		*
		from
		pds
		where pno is not null  			  	
		<include refid="search" />
		order by pno desc
	</select>
	
	<select id="selectSearchPdsListCount"  resultType="int">
		select
		count(*)
		from
		pds
		where pno is not null  			  	
		<include refid="search" />
		order by pno desc
	</select>
	
	
	<select id="selectPdsByPno"  resultType="pds">
		select * 
		from pds 
		where pno=#{pno}
	</select>
	
	<update id="insertPds" parameterType="pds">
		insert 
		into 
		pds(pno,title,writer,content,important)
		values
		(#{pno},#{title},#{writer},#{content},#{important})
	</update>
	
	<update id="updatePds" parameterType="pds">
		update 
		pds
		set 
		title=#{title}, content=#{content}, updatedate=sysdate 
		where pno=#{pno}
	</update>
	
	<update id="deletePds" parameterType="int">
		delete 
		from pds 
		where pno=#{pno}
	</update>
	
	<update id="increaseViewCnt" parameterType="int">
		update 
		pds 
		set 
		viewcnt=viewcnt+1 
		where pno=#{pno}
	</update>
	
	<select id="selectPdsSeqNext" resultType="int">
		select pds_seq.nextval as pno from dual
	</select>
	
	<update id="insertReadPds">
		insert into readpds(rpno, pno, reader)
		values(#{rpno}, #{pno}, #{reader})
	</update>
	
	<select id="selectReadPdsListById" parameterType="str" resultType="pds">
		select * from pds A, readpds B
		where A.pno = B.pno
		and B.reader = #{loginUserId}
	</select>
	
	<select id="selectRpnoSeqNext" resultType="int">
		select rpno_seq.nextval as rpno from dual
	</select>
	
	<select id="selectCheckReadPds" resultType="int">
		select count(*) from readpds
		where pno=#{pno}
		and reader=#{reader}
	</select>
	
	<select id="selectImportantPdsList" resultType="pds">
		select * from pds
		where important = 1
	</select>
	
	<select id="selectImportantPdsListCount" resultType="int">
		select count(*) from pds
		where important = 1
	</select>
</mapper>  


